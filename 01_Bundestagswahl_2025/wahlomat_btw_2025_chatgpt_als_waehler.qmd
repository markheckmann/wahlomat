---
title: "ChatGPT macht den Wahl-O-Mat: Ein Experiment zur Bundestagswahl 2025"
date: 2025-02-18
categories: [statistics, DE]
lang: de  
format:
  html:
    anchor-sections: true
execute:
  freeze: auto
  fig-dpi: 300
editor:
  markdown:
    wrap: 110
---

```{r include=FALSE}
library(readxl)
library(tidyverse)
library(stringi)
library(janitor)
library(openxlsx)
library(flextable)
library(OpenRepGrid)
library(glue)

stopifnot(packageVersion("OpenRepGrid") >= "0.1.16") # >= 0.1.17.9004 oder h√∂her ben√∂tigt

# Farben f√ºr Abweichungen
blue_dark <- "#01178B"
blue_mid <- "#7677C4"
blue_light <- "#EEEEFF"

# Output Dateien
file_in <- "data/alle_parteien_wide_v1.xlsx"
grid_file <- "data/grid/alle_parteien_offiziell_und_ki_v1.xlsx"
grid_file_spd <- "data/grid/ki_spd_v1.xlsx"
grid_file_buendnis <- "data/grid/ki_bundnis_deutschland_v1.xlsx"
```

```{r echo=FALSE}
g <- importExcel(grid_file)
leftpoles(g) <- rightpoles(g)
parteien_auswahl <- c("SPD", "CDU/CSU", "GR√úNE", "FDP", "AfD", "Die Linke", "Freie W√§hler", "Volt", "B√ºndnis Deutschland", "WerteUnion", "BSW")
parteien_chatgpt <- glue("{parteien_auswahl}(c)")
ga <- g[, c(rbind(parteien_auswahl, parteien_chatgpt))]
```

![](img/roboter_spd_cdu.webp){width="70%" fig-align="center"}

*Hinweis: Dieser Beitrag kn√ºpft an meinen [letzten Post](https://markheckmann.de/posts/2025-bundestagswahl-wahlomat/wahlomat_btw_2025) an, in dem die Haltung der Parteien zu den politischen Thesen im [Wahl-O-Mat](https://www.wahl-o-mat.de/bundestagswahl2025) grafisch
aufbereitet wurde.*

---- 

Politische Entscheidungen sind oft komplex. Der [Wahl-O-Mat](https://www.wahl-o-mat.de/bundestagswahl2025) der [Bundeszentrale f√ºr Politische Bildung](https://www.bpb.de/) hilft W√§hlerinnen und W√§hlern, ihre eigenen Positionen mit den [offiziellen Positionen](#sec-faq) der Parteien abzugleichen. 

In diesem Experiment habe ich [ChatGPT](https://openai.com/chatgpt/) (Modell GPT-4o) angewiesen, den Wahl-O-Mat aus der Perspektive eines typischen W√§hlers verschiedener Parteien zu beantworten. 

ü§ñ Dazu hat ChatGPT f√ºr jede Partei einen entsprechenden Prompt erhalten:

> Du bist ein √ºberzeugter W√§hler der Partei XYZ Deine Aufgabe ist es, die folgenden 38 politischen Thesen so
> zu beantworten, wie es ein typischer Anh√§nger der Partei XYZ tun w√ºrde.

üìù Die vollst√§ndigen Instruktionen finden sich [am Ende des Beitrags](#sec-prompt).

Wie wird der KI-W√§hler im Wahl-O-Mat antworten? Wird er die Positionen seiner Parteien genau wiedergeben? Wird es Abweichungen von der Positionen seiner Partei geben? Oder hat der KI-W√§hler gar eine ganz eigene Meinung?


## Ergebnis: Wo gibt es √úbereinstimmungen und Unterschiede?

Die farbcodierte Heatmap (@fig-heatmap-vergleich) zeigt die Antworten auf die 38 im Wahl-O-Mat verwendeten [politischen Thesen](#sec-thesen) auf einen Blick. 
[Gr√ºn]{style="background-color:#02F900; color:#000000; padding: 0 2px;"} steht f√ºr Zustimmung, [Oliv]{style="background-color:#7F7F00; color:#FFFFFF; padding: 0 2px;"} f√ºr Neutralit√§t und [Rot]{style="background-color:#FF2500; color:#FFFFFF; padding: 0 2px;"} f√ºr Ablehnung der These. 

In den Spalten wechseln sich offizielle Parteiposition (schwarze √úberschrift) mit den Antworten des KI-W√§hlers f√ºr diese Partei (graue √úberschrift) ab. Der KI-W√§hler ist auch durch den Zusatz ‚Äû(c)‚Äú (f√ºr ChatGPT) hinter dem Parteinamen erkennbar. 

üìå **Es zeigt sich: Die Antworten des KI-W√§hlers und die offizielle Position seiner Partei stimmen bei vielen, aber nicht allen Thesen √ºberein.**

```{r}
#| label: fig-heatmap-vergleich
#| echo: false
#| fig.width: 10
#| fig.height: 7.5
#| out.width: 790
#| out.height: 790*.75
#| fig-cap: Offizielle Parteiposition vs. Antwort des KI-W√§hlers

ga_3 <- reorder2d(ga, center = 0)
ee <- elements(ga_3)
eo <- ee |> str_subset("\\(c\\)", negate = TRUE)
ec <- paste0(eo, "(c)")
ei <- c(rbind(eo, ec))
ii <- match(ei, ee)
ii <- ii[c(3:22, 1:2)] # rotieren, f√ºr links - rechts Sortierung
ga_4 <- ga_3[, ii]
el <- elements(ga_4)
col.e <- ifelse(str_detect(el, "\\(c\\)"), "#777777", "black")
bertin(ga_4,
  align = FALSE,
  colors = c("red", "green"),
  showvalues = FALSE,
  cex.elements = .75,
  xlim = c(.33, .67),
  ylim = c(0, .8),
  id = c(TRUE, FALSE),
  col.e = col.e
)
x0 <- seq(from = .33, to = .67, length.out = 12)
segments(x0 = x0, y0 = 0, x1 = x0, y1 = .8, lwd = 2)
legend("topleft",
  legend = c("Zustimmung", "Neutral", "Ablehnung"),
  fill = c("green", "#7F7F00", "red"), border = FALSE, bty = "n"
)
```


## Wo weichen die Antworten am meisten ab?

@fig-heatmap-abweichungen zeigt detailliert, wo die KI-W√§hler von der offiziellen Parteiposition abweichen. Die Abstufungen sind:

- [Hellblau]{style="background-color:#EEEEFF; color:#000000; padding: 0 2px;"}: Keine Abweichung. KI-W√§hler und die Parteiposition stimmen √ºberein.
- [Blau]{style="background-color:#7677C4; color:#FFFFFF; padding: 0 2px;"}: Eine Stufe Unterschied (z. B. Zustimmung statt Neutral).
- [Dunkelblau]{style="background-color:#01178B; color:#FFFFFF; padding: 0 2px;"}: Zwei Stufen Unterschied (z. B. Zustimmung statt Ablehnung).


üìå **Ergebnis: Manche Parteien haben mehr Abweichungen als andere ‚Äì und auch bei Thesen zeigen sich deutliche Unterschiede.**

```{r}
#| label: fig-heatmap-abweichungen
#| echo: false
#| fig.width: 10
#| fig.height: 7.5
#| out.width: 790
#| out.height: 790*.75
#| fig-cap: Abweichungen zwischen Parteiposition und KI-W√§hler

g_tmp <- ga_4
rightpoles(g_tmp) <- ""
m <- ratings(g_tmp, trim = NA)
rownames(m) <- rownames(m) |> str_remove_all(" - $")
i <- seq(1, 22, 2) # jede zweite Spalte
gd <- ga_4[, i]
gd[] <- 0
gd <- setScale(gd, min = 0, max = 2)
r <- abs(m[, i] - m[, i + 1])
ratings(gd) <- r
bertin(gd,
  align = FALSE,
  colors = c(blue_light, blue_dark),
  showvalues = FALSE,
  cex.elements = .75,
  xlim = c(.33, .67),
  ylim = c(0, .8),
  id = c(TRUE, FALSE)
)
x0 <- seq(from = .33, to = .67, length.out = 12)
segments(x0 = x0, y0 = 0, x1 = x0, y1 = .8, lwd = 2)
legend("topleft", title = "Abweichung:", legend = c("Keine", "1 Stufe", "2 Stufen"), fill = c(blue_light, blue_mid, blue_dark), border = FALSE, bty = "n")
```

## Welche Parteien haben die  meisten Abweichungen?

@fig-abweichungen-partei zeigt, bei welcher Partei die meisten Abweichungen auftreten. Beispielsweise weicht der KI-W√§hler beim B√ºndnis Deutschland 15-mal von der offiziellen Linie ab, w√§hrend Die Linke nur f√ºnf Abweichungen verzeichnet.

üìå **Bei einigen Parteien gibt es deutlich mehr Abweichungen als bei anderen.**

```{r}
#| label: fig-abweichungen-partei
#| echo: false
#| fig.width: 7
#| fig.height: 5
#| out.width: 700
#| out.height: 500
#| fig-cap: Anzahl Abweichungen pro Partei

N <- 38
lvls <- c(`2` = "2 Stufen", `1` = "1 Stufe")
df_fehler_parteien <-
  as.data.frame(r) |>
  pivot_longer(cols = everything()) |>
  filter(value > 0) |>
  group_by(name) |>
  count(value) |>
  mutate(
    value_fac = recode(value, !!!lvls) |> factor(levels = lvls),
    n_gesamt = sum(n),
    perc = n / N,
    perc_gesamt = n_gesamt / N
  )

th <- theme_minimal() +
  theme(
    plot.title = element_text(color = "#666666", face = "bold", size = 15),
    plot.subtitle = element_text(color = "#555555", lineheight = 1.1),
    plot.title.position = "plot",
    axis.title = element_text(size = 12, face = "bold"),
    axis.text = element_text(size = 11),
    axis.text.x = element_text(size = 11, color = "black"),
    legend.title = element_text(size = 11, face = "plain"),
    legend.text = element_text(size = 11),
    axis.line.x = element_line(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.background = element_blank(),
    axis.ticks.x = element_line(linewidth = .25)
  )

ggplot(df_fehler_parteien, aes(x = fct_reorder(name, n_gesamt), y = perc, fill = value_fac)) +
  geom_col() +
  coord_flip() +
  theme_bw() +
  labs(x = "", y = "") +
  geom_text(aes(label = n), size = 3, color = "white", position = position_stack(vjust = .5)) +
  scale_fill_manual("Abweichung", values = c("1 Stufe" = blue_mid, "2 Stufen" = blue_dark)) +
  scale_y_continuous(expand = expansion(mult = c(0, .1)), labels = scales::percent_format()) +
  ggtitle(
    "Anzahl Abweichungen pro Partei",
    "Pro Partei werden Anzahl und Anteil gro√üer und kleiner Abweichungen zwischen Parteiposition\nund KI-W√§hler dargestellt\n"
  ) +
  th
```


## Welche Thesen sind besonders betroffen?

@fig-abweichungen-these zeigt welche These wie h√§ufig betroffen ist:

- Die These *"Ehrenamtliche T√§tigkeiten f√ºr Rente anrechnen"* f√ºhrt das Feld mit 10 von 11 Abweichungen an.
- Beim *"Tempolimit auf Autobahn einf√ºhren"* antworteten die KI-W√§hler bis auf einen Fall im Sinne ihrer Parteien.
- Nur 3 der 38 Thesen wurden in allen F√§llen exakt gem√§√ü der offiziellen Parteilinie beantwortet.

üìå **Insgesamt weisen die Thesen gro√üe Unterschiede bei der Anzahl an Abweichungen auf.**

```{r}
#| label: fig-abweichungen-these
#| echo: false
#| fig.width: 7
#| fig.height: 7.5
#| out.width: 700
#| out.height: 750
#| fig-cap: Anzahl Abweichungen pro These

lvls <- c(`0` = "keine", `2` = "2 Stufen", `1` = "1 Stufe")
N <- 11
df_fehler_thesen <-
  t(r) |>
  as.data.frame(r) |>
  pivot_longer(cols = everything()) |>
  group_by(name) |>
  count(value) |>
  mutate(
    value_fac = recode(value, !!!lvls) |> factor(levels = lvls),
    n_gesamt = ifelse(value %in% 1:2, n, 0) |> sum(na.rm = TRUE),
    perc = n / N,
    perc_gesamt = n_gesamt / N
  )

ggplot(df_fehler_thesen, aes(x = fct_reorder(name, n_gesamt), y = perc, fill = value_fac)) +
  geom_col() +
  coord_flip() +
  theme_bw() +
  labs(x = "", y = "") +
  geom_text(aes(label = ifelse(value == 0, "", n)), size = 3, color = "white", position = position_stack(vjust = .5)) +
  scale_fill_manual("Abweichung", values = c("keine" = "transparent", "1 Stufe" = "#7775C2", "2 Stufen" = "darkblue"), breaks = c("1 Stufe", "2 Stufen")) +
  scale_y_continuous(expand = expansion(), labels = scales::percent_format(), limits = c(0, 1)) +
  ggtitle(
    "Anzahl Abweichungen pro These",
    "Pro politischer These werden Anzahl und Anteil gro√üer und kleiner Abweichungen zwischen\nParteiposition und KI-W√§hler dargestellt\n"
  ) +
  th +
  theme(
    axis.title = element_text(size = 12, face = "bold"),
    axis.text = element_text(size = 8.5),
  )
```

## Offizielle Position vs. KI-W√§hler im √úberblick

In @fig-heatmap-ordered wurden die Spalten nach √Ñhnlichkeit sortiert. Dabei zeigt sich unter anderem Folgendes:

- Bei Die Linke, FDP oder AfD liegt der KI-W√§hler (grau) direkt neben seiner Partei (schwarz)
- Bei Freie W√§hler hingegen liegt der KI-W√§hler zwischen CDU/CSU und Wertunion, die Partei jedoch zwischen SPD und FDP.

üìå **Nicht immer antwortet ein KI-W√§hler am √§hnlichsten zu seiner Partei.**

```{r}
#| label: fig-heatmap-ordered
#| echo: false
#| fig.width: 10
#| fig.height: 7.5
#| out.width: 790
#| out.height: 790*.75
#| fig-cap: Parteiposition und KI-W√§hler nach √Ñhnlichkeit sortiert

ga_2d <- reorder2d(ga, center = 0)
e_ii <- c(3:22, 1:2) # Spalten rotieren, da sinnhafter
ga_2e <- ga_2d[, e_ii]
el <- elements(ga_2e)
col.e <- ifelse(str_detect(el, "\\(c\\)"), "#777777", "black")
bertin(ga_2e,
  align = FALSE,
  colors = c("red", "green"),
  showvalues = FALSE,
  cex.elements = .75,
  xlim = c(.33, .67),
  ylim = c(0, .8),
  id = c(TRUE, FALSE),
  col.e = col.e
)
legend("topleft",
  legend = c("Zustimmung", "Neutral", "Ablehnung"),
  fill = c("green", "#7F7F00", "red"), border = FALSE, bty = "n"
)
```

Der nachfolgende Biplot (ein Streudiagramm mit mehreren Achsen, siehe @fig-biplot) stellt dies grafisch dar:

-   **Punkte**: repr√§sentieren **Parteien/KI-W√§hler**. Liegen sie nah beieinander sind, weisen sie √§hnliche Antwortmuster auf.

-   **Achsen** sind die **politischen Thesen** und zeigen stets in Richtung *Zustimmung zur
    These*. Durch F√§llen des Lots auf eine Achse, kann man tendenziell ablesen, ob die Partei/KI-W√§hler eher zustimmend oder ablehnend ist.

*Beispiel*: Die AfD sowie CDU/CSU haben auf der Achse (These) "*Kernenergie zur Stromerzeugung nutzen*" einen hohen Wert, d.h. sie stimmen der These zu. SPD und Gr√ºne haben auf der Achse einen niedrigen Wert, d.h. sie stimmen der These nicht zu. *Hinweis*: Bitte beachten Sie, dass die 2D-Darstellung die Position der Parteien auf den Achsen/Thesen nicht 100% genau abbildet.

Auch hier zeigt sich noch einmal grafisch, was wir bereits oben beobachtet haben:

üìå **Insgesamt liegen die KI-W√§hler recht nah an ihren Parteien. Bei Freie W√§hler und Wertunion gibt es sichtbare Abweichungen.**

```{r}
#| label: fig-biplot
#| echo: false
#| fig.width: 9
#| fig.height: 5.5
#| out.width: 790
#| out.height: 790*(5.5/9)
#| fig-cap: √úbersicht von Parteiposition und Antworten der KI-W√§hler

ga2 <- ga
e <- elements(ga2)
elements(ga2) <- e |>
  str_replace_all("CDU / CSU", "CDU") |>
  str_replace_all("Freie W√§hler", "FreieW") |>
  str_replace_all("B√ºndnis Deutschland", "B√ºnDeu") |>
  str_replace_all("WerteUnion", "WerteU") |>
  str_replace_all("Die Linke", "Linke") |>
  str_replace_all("Die Gr√ºnen", "Gr√ºne")

rightpoles(ga2) <- paste("‚Üë", rightpoles(ga2))
leftpoles(ga2) <- NA
set.seed(0)
biplot2d(ga2,
  center = 0,
  mai = c(1, 2.85, 1, 2.85),
  c.label.col = "blue",
  e.point.col = rep_len(c("black", "#777777"), ncol(ga2)),
  e.label.col = rep_len(c("black", "#777777"), ncol(ga2))
)
```


## Bleiben die Antworten des KI-W√§hlers konstant?

Dazu wurden f√ºr die SPD und das B√ºndnis Deutschland **jeweils 20 KI-W√§hler** ü§ñü§ñü§ñ befragt.  @fig-heatmap-spd zeigt die Antworten der KI-W√§hler (grau) der SPD im Vergleich zur Parteiposition (letzte Spalte, schwarz).

W√§hrend viele Antworten stabil blieben ‚Äì etwa die durchgehende Unterst√ºtzung f√ºr ein *"Tempolimit auf Autobahnen"* ‚Äì zeigten anderen Thesen deutliche Schwankungen. Auff√§llig ist die Bandbreite an Antworten bei  *"Beratungspflicht zu Schwangerschaftsabbruch"*: Hier decken die KI-W√§hler alle drei Antwortoptionen ab ‚Äì von Zustimmung √ºber Neutralit√§t bis hin zur Ablehnung. 

‚ö° Auff√§llig ist, dass es diverse Thesen gibt, bei denen die KI-W√§hler systematisch von der offiziellen Parteilinie abweichen. Ein Beispiel ist die These *"Soziales Pflichtjahr f√ºr Jugendliche einf√ºhren"*: W√§hrend die Partei diese ablehnt, schwanken die KI-W√§hler zwischen Zustimmung und Neutralit√§t.

```{r}
#| label: fig-heatmap-spd
#| echo: false
#| fig.width: 10
#| fig.height: 7.5
#| out.width: 790
#| out.height: 790*.75
#| fig-cap: Antworten von 20 KI-W√§hlern der SPD vs. offizielle Parteiposition

g <- importExcel(grid_file_spd)
leftpoles(g) <- rightpoles(g)
g <- cbind(ga[, 1], g)
ga_2d <- reorder2d(g, center = 0)
ga_2d <- ga_2d[, ncol(ga_2d):1]
el <- elements(ga_2d)
col.e <- ifelse(str_detect(el, "\\(c_[0-9]+\\)"), "#777777", "black")
bertin(ga_2d,
  align = FALSE,
  colors = c("red", "green"),
  showvalues = FALSE,
  cex.elements = .75,
  xlim = c(.33, .67),
  ylim = c(0, .8),
  id = c(TRUE, FALSE),
  col.e = col.e
)
x0 <- seq(from = .33, to = .67, length.out = 22)[21:22]
segments(x0 = x0, y0 = 0, x1 = x0, y1 = .8, lwd = 2)
legend("topleft",
  legend = c("Zustimmung", "Neutral", "Ablehnung"),
  fill = c("green", "#7F7F00", "red"), border = FALSE, bty = "n"
)
```

@fig-buendnis zeigt die Ergebnisse f√ºr das B√ºndnis Deutschland. Die Antworten der KI-W√§hler schwanken insgesamt st√§rker als bei der SPD. Besonders bemerkenswert ist die Reaktion auf die These *Arbeitserlaubnis f√ºr Asylsuchende sofort*: W√§hrend die offizielle Parteiposition eine Zustimmung vorsieht, lehnten die KI-W√§hler diese These konsistent ab ‚Äì ‚ö° ein deutlicher Widerspruch zur programmatischen Linie der Partei.

```{r}
#| label: fig-buendnis
#| echo: false
#| fig.width: 10
#| fig.height: 7.5
#| out.width: 790
#| out.height: 790*.75
#| fig-cap: Antworten von 20 KI-W√§hlern des B√ºndnis Deutschland vs. offizielle Parteiposition

g <- importExcel(grid_file_buendnis)
leftpoles(g) <- rightpoles(g)
g <- cbind(ga[, 17], g)
ga_2d <- reorder2d(g, center = 0)
el <- elements(ga_2d)
col.e <- ifelse(str_detect(el, "\\(c_[0-9]+\\)"), "#777777", "black")
bertin(ga_2d,
  align = FALSE,
  colors = c("red", "green"),
  showvalues = FALSE,
  cex.elements = .75,
  xlim = c(.33, .67),
  ylim = c(0, .8),
  id = c(TRUE, FALSE),
  col.e = col.e
)
x0 <- seq(from = .33, to = .67, length.out = 22)[21:22]
segments(x0 = x0, y0 = 0, x1 = x0, y1 = .8, lwd = 2)
legend("topleft",
  legend = c("Zustimmung", "Neutral", "Ablehnung"),
  fill = c("green", "#7F7F00", "red"), border = FALSE, bty = "n"
)
```

Abschlie√üend werden die 20 KI-W√§hler der SPD und des B√ºndnis Deutschland als Biplot dargestellt. Hier zeigt sich die systematische Abweichungen von der Partei bei einigen These sehr deutlich. Denn die Parteiposition liegt nicht im Zentrum ihrer KI-W√§hler. Besonders bei der SPD ist die Lage der Partei deutlich von den KI-W√§hlern abgegrenzt.

```{r}
#| label: fig-biplot-spd
#| echo: false
#| fig.width: 10
#| fig.height: 5.5
#| out.width: 790
#| out.height: 790*5.5/10
#| fig-cap: √úbersicht von Parteiposition sowie Antworten von 20 KI-W√§hlern der SPD

parteien_auswahl <- c("SPD", "CDU/CSU", "GR√úNE", "FDP", "AfD", "Die Linke", "Freie W√§hler", "Volt", "B√ºndnis Deutschland", "WerteUnion", "BSW")
parteien_chatgpt <- glue("{parteien_auswahl}(c)")
parteien_auswahl <- c(parteien_auswahl, parteien_chatgpt)

g <- importExcel(grid_file)
g_spd <- importExcel(grid_file_spd)
g_buendnis <- importExcel(grid_file_buendnis)

g_orig <- g[, parteien_auswahl]
leftpoles(g_orig) <- ""
leftpoles(g_spd) <- ""
leftpoles(g_buendnis) <- ""

gg <- cbind(g_orig, g_spd, g_buendnis)
rightpoles(gg) <- paste("‚Üë", rightpoles(gg))

set.seed(4)
el <- elements(gg)
ii_c <- str_detect(el, "\\(c\\)")
ii_spd <- str_detect(el, "spd\\(c_[0-9]+\\)")
ii_bd <- str_detect(el, "bundnis_deutschland\\(c_[0-9]+\\)")

e.label.col <- rep_len("black", ncol(gg))
e.label.col[el == "SPD"] <- "#D32D23"
e.label.col[el == "B√ºndnis Deutschland"] <- "#C2265F"
e.label.col[ii_c | ii_spd | ii_bd] <- "transparent"

e.point.col <- rep_len("black", ncol(gg))
e.point.col[ii_c] <- "transparent"
e.point.col[el == "SPD"] <- "#D32D23"
e.point.col[ii_spd] <- "#FFAAAA"
e.point.col[el == "B√ºndnis Deutschland"] <- "#C2265F"
e.point.col[ii_bd] <- "#F58AB0"

biplot2d(gg,
  col.active = which(!ii_spd & !ii_bd),
  var.show = FALSE,
  center = 0,
  mai = c(1, 2.85, 1, 2.85),
  c.label.col = "blue",
  e.label.col = e.label.col,
  e.point.col = e.point.col
)
```

## Fazit

1Ô∏è‚É£ Die KI-W√§hler sind ihrer eigenen Partei tendenziell √§hnlicher als anderen Parteien, zumindest im Gesamtbild.

2Ô∏è‚É£ Wie bei echten Parteianh√§ngern variieren die Antworten von KI-W√§hlern. Manche Thesen zeigen hierbei eine sehr gro√üe Variation in den Antworten, w√§hrend andere eher konstant bleiben. 

3Ô∏è‚É£ Auf√§llig ist, dass die Antworten der KI-W√§hler bei einigen Thesen systematisch von den offiziellen Parteipositionen abweichen. Unsere KI-W√§hler scheinen einen Bias zu haben.

**Was lernen wir nun daraus? Kann man ChatGPT z.B. nutzen, um einen W√§hler zu simulieren?**

üí° Dies l√§sst sich ohne Vergleichsdaten echter W√§hler nicht beantworten.
Echte Antworten w√ºrden vermutlich deutlich st√§rker variieren. Echte Menschen - auch W√§hler derselben Partei - sind vielschichtig in ihrer Haltung. So stellen viele Nutzer des Wahl-O-Mat fest, dass die √úbereinstimmung mit ihrer bevorzugten Partei selten 100 % betr√§gt. 

üí° Kritisch ist besonders die Existenz eines Bias. Wie kommt dieser zustande? Will man einen KI-W√§hler Ansatz gewinnbringend nutzen, gibt es viele Fragen zu kl√§ren: Lassen sich die systematischen Abweichungen bei den Thesen auch bei echten W√§hlern finden? Kann man den Ansatz z.B. mit gezielterem Prompting (z.B. inkl. Geschlecht, Alter etc.) oder Modellanpassungen verbessern? Ich bin gespannt was die Wissenschaft hierzu herausfinden und wie sie einen solchen Ansatz nutzbar machen wird.


## Anhang 

### Daten und Methodik

Es wurde der [Wahl-O-Mat-Datensatz](https://www.bpb.de/themen/wahl-o-mat/bundestagswahl-2025/558463/download/) der Bundeszentrale f√ºr Politische Bildung (BPB) genutzt.

Die Daten und Grafiken wurden in der [R Software](https://www.r-project.org/) aufbereitet. Die Heatmaps und
Biplots wurden mit dem R Paket [OpenRepGrid](https://joss.theoj.org/papers/10.21105/joss.06918#) (Heckmann, 2024) erzeugt. Die Zustimmung zu einer These wurde mit `1`, Neutralit√§t mit `0` und Ablehnung mit `-1`
codiert. Bei der Analyse wurde die M√∂glichkeit Thesen doppelt zu gewichten oder zu √ºberspringen nicht ber√ºcksichtigt.

In den Heatmaps wurden die Zeilen und Spalten (z.B. @fig-heatmap-ordered) nach den Ladungen der Parteien bzw. Thesen auf den ersten beiden Hauptkomponenten im Uhrzeigersinn sortiert. So entsteht eine Anordnung der Spalten (Parteien) und Zeilen (Thesen) nach √Ñhnlichkeit, die zugleich der Anordnung im Biplot entspricht. Eine √úbersicht zu Sortierungsmethoden (Seriation) f√ºr 2D-Matrizen findet man bei Hahsler (2017).

##### Der ChatGPT Prompt {#sec-prompt}

ChatGPT (Modell GPT-4o) hat pro KI-W√§hler folgenden Prompt erhalten. Der Platzhalter `<PARTEI>` wurde vorher
durch den Namen der Partei ersetzt.

::: {style="font-size: 80%;"}
```{r}
#| label: prompt
#| echo: false
#| results: asis

p <- read_lines("data/prompt.txt")
p <- p |> str_replace_all("<PARTEI>", "\\\\<PARTEI\\\\>")
p <- paste("> ", p)
prompt <- glue_collapse(p, sep = "\n")
cat(prompt)
```
:::

### Die Parteipositionen {#sec-faq}

In den FAQ des Wahl-O-Mat wird unter dem Punkt *Wer hat die Thesen beantwortet?* ausgef√ºhrt, dass die Parteien selber auf die Thesen geantwortet haben. Deshalb in diesem Beitrag von einer *offiziellen* Parteiposition gesprochen. Es folgt der Auszug aus den FAQ.

> Die Positionen und Begr√ºndungen der Parteien zu den Thesen im Wahl-O-Mat stammen ausschlie√ülich von den Parteien selbst. Sie werden von der Wahl-O-Mat-Redaktion nicht interpretiert oder ge√§ndert.
>
> Die Wahl-O-Mat-Thesen werden zur Beantwortung an die Vorst√§nde oder Gesch√§ftsf√ºhrungen der Parteien geschickt. Diese legen eigenverantwortlich fest, wer f√ºr die Partei die Thesen beantwortet. Die Parteien hatten etwa zwei Wochen Zeit, alle Thesen zu beantworten. Sie wurden gebeten, die Thesen entsprechend der Parteihaltung mit ‚Äûstimme zu‚Äú, ‚Äûstimme nicht zu‚Äú oder ‚Äûneutral‚Äú zu beantworten. Au√üerdem konnten sie zu jeder These eine Begr√ºndung abgeben, in der sie ihre jeweilige Position ausf√ºhren und ihren genauen Standpunkt zur These konkretisieren k√∂nnen.
>
> Die Thesen werden ausschlie√ülich von den Parteien beantwortet. Bei Unstimmigkeiten zwischen Position und Begr√ºndung einer Partei oder m√∂glichen Fehlern wird diese darauf hingewiesen, doch k√∂nnen nur die Parteien selbst entscheiden, ob ihre Eintr√§ge ge√§ndert werden.
>
> Somit k√∂nnen die Nutzerinnen und Nutzer im Wahl-O-Mat ihre eigenen Positionen mit den tats√§chlichen und autorisierten Positionen der Parteien vergleichen.


### Die politischen Thesen {#sec-thesen}

Die im Wahl-O-Mat verwendeten Thesen sind in der nachfolgenden Tabelle aufgelistet. Zur schnelleren
Auffindbarkeit ist die Tabelle alphabetisch nach der in den Grafiken genutzten Thesen-Kurzform (von uns
erstellt) geordnet.

::: {style="font-size: 90%;"}
```{r tabelle-thesen, echo=FALSE}
#| label: tbl-thesen
#| echo: false
#| tbl-cap: Die 38 Wahl-O-Mat Thesen

df <- read_excel(file_in)
df <- df |> mutate(these_kurzform_cleaned = str_remove_all(these_kurzform, "‚Äû"))
thesen_ordered <- stri_sort(df$these_kurzform_cleaned, locale = "de_DE")
de_order <- match(df$these_kurzform_cleaned, thesen_ordered)
df |>
  select(c(Kurzform = these_kurzform, These = these_these)) |>
  arrange(de_order) |>
  knitr::kable()
```
:::

## Literatur

Hahsler, M. (2017). An experimental comparison of seriation methods for one-mode two-way data. *European
Journal of Operational Research*, 257, 133--143. <https://doi.org/10.1016/j.ejor.2016.08.066>

Heckmann, M. (2024). OpenRepGrid: An R Package for the Analysis of Repertory Grid Data. *Journal of Open
Source Software*, 9(104), 6918, <https://doi.org/10.21105/joss.06918>

<img src="http://vg03.met.vgwort.de/na/32933e775beb4a2cad1b9f3ab558aa5e" width="1" height="1" alt="">
